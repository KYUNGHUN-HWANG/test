#ifndef AMO_STATE_H
#define AMO_STATE_H

typedef enum _evntmode{
	DEFAULT_MODE = 0x00u,
	FACING_MODE,
	AVOID_MODE,
	SWING_MODE,
	FREE_MODE,
	MODE_OFF,
	INVALID_VALUE = 0x0Fu,
}Evnt_mode;

typedef enum _touchtmode_dr{
	NONE_DRIVER = 0x00u,
	HU_DRIVER_TOUCH,
	CTS_DRIVER_TOUCH,
}Touch_mode_Dr;

typedef enum _touchtmode_ps{
	NONE_PASSENGER = 0x00u,
	HU_PASSENGER_TOUCH,
	CTS_PASSENGER_TOUCH,
}Touch_mode_Ps;

typedef enum _touchtmode_rr{
	NONE_REAR = 0x00u,
	HU_REAR_TOUCH,
	CTS_REAR_TOUCH,	
}Touch_mode_Rr;

#define DEVICE_LH_KEY_PRESS_EVENT 0x0000000000000001ULL
#define DEVICE_RH_KEY_PRESS_EVENT 0x0000000000000002ULL
#define DEVICE_LH_LONG_PRESS_EVENT 0x0000000000000004ULL
#define DEVICE_RH_LONG_PRESS_EVENT 0x0000000000000008ULL

#define DEVICE_KEY_FOCUS_PRESS_EVENT 0x0000000000000010ULL
#define DEVICE_KEY_SPREAD_PRESS_EVENT 0x0000000000000020ULL

#define DEVICE_SLEEP_TIMER_EVENT 0x0000000000000040ULL

#define DEVICE_IGN2_ACOK_ON_EVENT 0x0000000000000080ULL
#define DEVICE_IGN2_ACOK_OFF_EVENT 0x0000000000000100ULL
#define DEVICE_IGN3_ACOK_ON_EVENT 0x0000000000000200ULL
#define DEVICE_IGN3_ACOK_OFF_EVENT 0x0000000000000400ULL

#define DEVICE_P_OIP_MANUAL_CAN_LIN_EVENT 0x0000000000000800ULL
#define DEVICE_CTS_MANUAL_CAN_LIN_EVENT 0x0000000000001000ULL
#define DEVICE_H_KEY_MANUAL_LIN_CAN_EVENT 0x0000000000002000ULL

#define DEVICE_KEY_MANUAL_LIN_CAN_EVENT 0x0000000000004000ULL
#define DEVICE_P_OIP_MANUAL_LIN_CAN_EVENT 0x0000000000008000ULL
#define DEVICE_CTS_MANUAL_LIN_CAN_EVENT 0x0000000000010000ULL

#define DEVICE_P_OIP_FULL_CLOSE_CAN_LIN_EVENT 0x0000000000020000ULL
#define DEVICE_CTS_FULL_CLOSE_CAN_LIN_EVENT 0x0000000000040000ULL
#define DEVICE_P_OIP_FULL_CLOSE_LIN_CAN_EVENT 0x0000000000080000ULL
#define DEVICE_CTS_FULL_CLOSE_LIN_CAN_EVENT 0x0000000000100000ULL
#define DEVICE_H_KEY_FULL_CLOSE_LIN_CAN_EVENT 0x0000000000200000ULL
#define DEVICE_STICK_FULL_CLOSE_LIN_CAN_EVENT 0x0000000000400000ULL

#define DEVICE_P_OIP_FOCUS_CAN_LIN_EVENT 0x0000000000800000ULL
#define DEVICE_CTS_FOCUS_CAN_LIN_EVENT 0x0000000001000000ULL
#define DEVICE_P_OIP_FOCUS_LIN_CAN_EVENT 0x0000000002000000ULL
#define DEVICE_CTS_FOCUS_LIN_CAN_EVENT 0x0000000004000000ULL
#define DEVICE_H_KEY_FOCUS_LIN_CAN_EVENT 0x0000000008000000ULL
#define DEVICE_STICK_FOCUS_LIN_CAN_EVENT 0x0000000010000000ULL

#define DEVICE_P_OIP_SPREAD_CAN_LIN_EVENT 0x0000000020000000ULL
#define DEVICE_CTS_SPREAD_CAN_LIN_EVENT 0x0000000040000000ULL
#define DEVICE_P_OIP_SPREAD_LIN_CAN_EVENT 0x0000000080000000ULL
#define DEVICE_CTS_SPREAD_LIN_CAN_EVENT 0x0000000100000000ULL
#define DEVICE_H_KEY_SPREAD_LIN_CAN_EVENT 0x0000000200000000ULL

#define DEVICE_P_OIP_CYCLE_CAN_LIN_EVENT 0x0000000400000000ULL
#define DEVICE_CTS_CYCLE_CAN_LIN_EVENT 0x0000000800000000ULL
#define DEVICE_P_OIP_CYCLE_LIN_CAN_EVENT 0x0000001000000000ULL
#define DEVICE_CTS_CYCLE_LIN_CAN_EVENT 0x0000002000000000ULL
#define DEVICE_H_KEY_CYCLE_LIN_CAN_EVENT 0x0000004000000000ULL

#define DEVICE_ACTUATOR_RECOVERY_EVENT 0x0000008000000000ULL
#define DEVICE_ACTUATOR_RECOVERY_RELEASE_EVENT 0x0000010000000000ULL

#define DEVICE_ACTUATOR_SECURE_EVENT 0x0000020000000000ULL
#define DEVICE_ACTUATOR_SECURE_RELEASE_EVENT 0x0000040000000000ULL
#define DEVICE_CAN_RXDATA_TIMEOUT_EVENT 0x0000080000000000ULL

#define DEVICE_CAN_RXDATA_RECOVERY_EVENT 0x0000100000000000ULL

#define DEVICE_CAN_EVNT_ATCU_SEND_EVENT 0x0000200000000000ULL
#define DEVICE_CAN_EVNT_UTILITY_MODE_EVENT 0x0000400000000000ULL
#define DEVICE_CAN_EVNT_LAST_MODE_EVENT 0x0000800000000000ULL
#define DEVICE_EVNT_DTC_EVENT 0x0001000000000000ULL
#define DEVICE_EVNT_OTA_EVENT 0x0002000000000000ULL
#define DEVICE_SLEEP_ENTER_EVENT 0x0004000000000000ULL
#define DEVICE_ATCU_TX_EVENT 0x0008000000000000ULL

typedef enum{
	DEVICE_STATE_NONE,
	DEVICE_STATE_INIT,
	DEVICE_STATE_MAIN_IDLE,

	DEVICE_STATE_DEFAULT_MODE_INIT,
	DEVICE_STATE_DEFAULT_MAIN,

	DEVICE_STATE_LAST_MODE_INIT,
	DEVICE_STATE_LAST_MAIN,

	DEVICE_STATE_MANUAL_MODE_INIT,
	DEVICE_STATE_MANUAL_MAIN,

	DEVICE_STATE_FULL_CLOSE_MODE_INIT,
	DEVICE_STATE_FULL_CLOSE_MAIN,

	DEVICE_STATE_KEY_FULL_CLOSE_MODE_INIT,
	DEVICE_STATE_KEY_FULL_CLOSE_MAIN,

	DEVICE_STATE_FOCUS_MODE_INIT,
	DEVICE_STATE_FOCUS_MAIN,

	DEVICE_STATE_KEY_FOCUS_MODE_INIT,
	DEVICE_STATE_KEY_FOCUS_MAIN,

	DEVICE_STATE_SPREAD_MODE_INIT,
	DEVICE_STATE_SPREAD_MAIN,

	DEVICE_STATE_CYCLE_MODE_INIT,
	DEVICE_STATE_CYCLE_MAIN,

	DEVICE_STATE_RECOVERY_MODE_INIT,
	DEVICE_STATE_RECOVERY_MAIN,

	DEVICE_STATE_SECURE_MODE_INIT,
	DEVICE_STATE_SECURE_MAIN,

	DEVICE_STATE_UTILITY_MODE_INIT,
	DEVICE_STATE_UTILITY_MODE_MAIN,

	DEVICE_STATE_EVT_INIT,
	DEVICE_STATE_EVT_MAIN,

	DEVICE_STATE_LH_KEY_INIT,
	DEVICE_STATE_LH_KEY_MAIN,

	DEVICE_STATE_LH_LONG_KEY_INIT,
	DEVICE_STATE_LH_LONG_KEY_MAIN,

	DEVICE_RX_TIMEOUT_INIT,
	DEVICE_RX_TIMEOUT_MAIN,

	DEVICE_RX_RECOVERY_INIT,
	DEVICE_RX_RECOVERY_MAIN,

	DEVICE_EVNT_ATCU_SEND_INIT,
	DEVICE_EVNT_ATCU_SEND_MAIN,
	
	DEVICE_STATE_SLEEP_INIT,
	DEVICE_STATE_SLEEP_MAIN,
	DEVICE_STATE_SLEEP_ENTER,
	DEVICE_STATE_RH_KEY_INIT,
	DEVICE_STATE_RH_KEY_MAIN,	

	DEVICE_STATE_RH_LONG_KEY_INIT,
	DEVICE_STATE_RH_LONG_KEY_MAIN,
	DEVICE_STATC_DTC_MAIN,
	DEVICE_STATC_FW_OTA_MAIN,
	DEVICE_STATC_ATCU_TX_MAIN,

	DEVICE_STATE_MAX
}DeviceStateType;
extern DeviceStateType Board_state;
extern uint8_t rx_Recovery_CurrentSet_Count;
extern uint8_t secureSpecialCmd_Count;
void Handle_Event_Mode(void);

#endif /* AMO_STATE_H */

